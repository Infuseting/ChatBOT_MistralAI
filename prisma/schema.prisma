generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("ROOT_DATABASE_URL")
}

enum Sender {
  user
  assistant
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String?  @unique
  googleId  String?  @unique
  avatar    String?
  createdAt DateTime @default(now())

  threads      Thread[]
  accessTokens AccessToken[]
  shares       Share[]
}

model Thread {
  id        String    @id @default(uuid())
  idThread  String    @unique
  name      String
  context   String?
  model     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  messages  Message[]
  shares    Share[]
}

model Message {
  id        String   @id @default(uuid())
  idMessage String   @unique
  thinking  String
  sender    Sender
  sentAt    DateTime @default(now())

  parent   Message? @relation("MessageParent", fields: [parentId], references: [id])
  parentId String?

  // opposite relation for self-relation (children messages)
  children Message[] @relation("MessageParent")

  thread   Thread @relation(fields: [threadId], references: [id])
  threadId String
}

model AccessToken {
  id        String    @id @default(uuid())
  token     String    @unique
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime  @default(now())
  expiresAt DateTime?
}

model Share {
  id        String    @id @default(uuid())
  code      String    @unique
  thread    Thread?   @relation(fields: [threadId], references: [id])
  threadId  String?
  user      User?     @relation(fields: [userId], references: [id])
  userId    String?
  createdAt DateTime  @default(now())
  expiresAt DateTime?
  clicks    Int       @default(0)
}
